[gd_resource type="ShaderMaterial" load_steps=13 format=2]

[ext_resource path="res://textures/128px_fabric_03_BW.png" type="Texture" id=1]
[ext_resource path="res://textures/128px_cloud_01_BW.png" type="Texture" id=2]
[ext_resource path="res://textures/128px_fabric_03_NM.png" type="Texture" id=3]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 2 )
texture_type = 1

[sub_resource type="VisualShaderNodeScalarOp" id=3]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=4]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=5]

[sub_resource type="VisualShaderNodeTexture" id=6]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=7]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=8]
texture = ExtResource( 3 )

[sub_resource type="VisualShader" id=9]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_8;



void vertex() {
// Output:0

}

void fragment() {
// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Color:18
	vec3 n_out18p0 = vec3(1.000000, 1.000000, 1.000000);
	float n_out18p1 = 1.000000;

// Texture:8
	vec4 tex_frg_8_read = texture(tex_frg_8, UV.xy);
	vec3 n_out8p0 = tex_frg_8_read.rgb;
	float n_out8p1 = tex_frg_8_read.a;

// Output:0
	ALBEDO = n_out2p0;
	ROUGHNESS = dot(n_out18p0, vec3(0.333333, 0.333333, 0.333333));
	NORMALMAP = n_out8p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -738, -306 )
nodes/fragment/0/position = Vector2( 1060, 0 )
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( -880, -340 )
nodes/fragment/7/node = SubResource( 7 )
nodes/fragment/7/position = Vector2( -120, 480 )
nodes/fragment/8/node = SubResource( 8 )
nodes/fragment/8/position = Vector2( 380, 500 )
nodes/fragment/12/node = SubResource( 1 )
nodes/fragment/12/position = Vector2( -180, -320 )
nodes/fragment/13/node = SubResource( 2 )
nodes/fragment/13/position = Vector2( -1260, 440 )
nodes/fragment/15/node = SubResource( 3 )
nodes/fragment/15/position = Vector2( -680, 400 )
nodes/fragment/17/node = SubResource( 4 )
nodes/fragment/17/position = Vector2( 440, -440 )
nodes/fragment/18/node = SubResource( 5 )
nodes/fragment/18/position = Vector2( 580, 180 )
nodes/fragment/connections = PoolIntArray( 13, 0, 15, 0, 2, 0, 17, 0, 2, 0, 12, 0, 8, 0, 0, 8, 15, 0, 12, 1, 7, 0, 17, 1, 2, 0, 0, 0, 18, 0, 0, 3 )

[resource]
shader = SubResource( 9 )
