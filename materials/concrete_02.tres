[gd_resource type="ShaderMaterial" load_steps=10 format=2]

[ext_resource path="res://textures/128px_concrete_01_NM.png" type="Texture" id=1]
[ext_resource path="res://textures/128px_concrete_01_BW.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeColorConstant" id=3]
output_port_for_preview = 0
constant = Color( 0.125244, 0.135498, 0.148438, 1 )

[sub_resource type="VisualShaderNodeColorOp" id=4]
operator = 7

[sub_resource type="VisualShaderNodeScalarOp" id=5]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 2.0 ]

[sub_resource type="VisualShaderNodeColorConstant" id=6]
output_port_for_preview = 0
constant = Color( 0.585114, 0.593081, 0.601563, 1 )

[sub_resource type="VisualShader" id=7]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_10;



void vertex() {
// Output:0

}

void fragment() {
// Color:4
	vec3 n_out4p0 = vec3(0.125244, 0.135498, 0.148438);
	float n_out4p1 = 1.000000;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// ColorOp:5
	vec3 n_out5p0;
	{
		float base = n_out4p0.x;
		float blend = n_out2p0.x;
		if (base < 0.5) {
			n_out5p0.x = (base * (blend + 0.5));
		} else {
			n_out5p0.x = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}
	{
		float base = n_out4p0.y;
		float blend = n_out2p0.y;
		if (base < 0.5) {
			n_out5p0.y = (base * (blend + 0.5));
		} else {
			n_out5p0.y = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}
	{
		float base = n_out4p0.z;
		float blend = n_out2p0.z;
		if (base < 0.5) {
			n_out5p0.z = (base * (blend + 0.5));
		} else {
			n_out5p0.z = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}

// Texture:10
	vec4 tex_frg_10_read = texture(tex_frg_10, UV.xy);
	vec3 n_out10p0 = tex_frg_10_read.rgb;
	float n_out10p1 = tex_frg_10_read.a;

// Output:0
	ALBEDO = n_out5p0;
	ROUGHNESS = dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333));
	NORMALMAP = n_out10p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -531, 193 )
nodes/fragment/0/position = Vector2( 300, 60 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( -460, 240 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -240, 400 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 20, 60 )
nodes/fragment/8/node = SubResource( 5 )
nodes/fragment/8/position = Vector2( -200, 60 )
nodes/fragment/9/node = SubResource( 6 )
nodes/fragment/9/position = Vector2( 0, 340 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -40, 560 )
nodes/fragment/connections = PoolIntArray( 5, 0, 0, 0, 2, 0, 8, 0, 2, 0, 0, 3, 4, 0, 5, 0, 2, 0, 5, 1, 10, 0, 0, 8 )

[resource]
shader = SubResource( 7 )
